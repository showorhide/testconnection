{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "countrydata",
						"type": "DatasetReference"
					},
					"name": "countrydata"
				},
				{
					"dataset": {
						"referenceName": "countrycode",
						"type": "DatasetReference"
					},
					"name": "countrycode"
				},
				{
					"dataset": {
						"referenceName": "countrycode",
						"type": "DatasetReference"
					},
					"name": "countrycode2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "result",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Join2"
				}
			],
			"script": "source(output(\n\t\tName as string,\n\t\tAttribute1 as string,\n\t\tcontrycode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countrydata\nsource(output(\n\t\t{CountryCode (abc)} as string,\n\t\t{CountryName (abc)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countrycode\nsource(output(\n\t\t{CountryCode (abc)} as string,\n\t\t{CountryName (abc)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> countrycode2\ncountrydata, countrycode join(contrycode == {CountryCode (abc)},\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tName,\n\t\tAttribute1,\n\t\tcontrycode,\n\t\tPrimaryLocationCountryName = {CountryName (abc)}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, countrycode2 join(contrycode == {CountryCode (abc)},\n\tjoinType:'outer',\n\tbroadcast: 'auto')~> Join2\nJoin2 sink(input(\n\t\t{CountryCode (abc)} as string,\n\t\t{CountryName (abc)} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}